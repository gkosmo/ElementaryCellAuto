#include <vector>
#include <iostream>

using namespace std;

	void remplirtab (int (&tabl)[8], int &taille);   //  rempli la regle de l'automaton 
	void remplirvec (vector<int> &vec, int &taille); // rempli une table; il est preferable qu'elle ne soit pas trop grande (min5/max10)
	int presenttab (int tab[8], int taille);   // presente la regle
	int presentvec (vector<int> vec, int tail); // affiche les tables transformé
	void celltest (vector<int> &vec,vector<int> &vec2,int tab[8],int tail); // fais le test et transforme.



int main () {
	vector<int> v1(10);
	vector<int> v2(10);
	int reg[8];
	int tail, i, v(2), tail2;

	remplirtab (reg, tail);
	remplirvec(v1, tail2);
	presenttab(reg, tail);
	cout<<endl;
	presentvec(v1,tail2);
	cout<<endl;
    while (v==2){celltest(v1,v2, reg, tail2); // tant que l'on tape 2 à la fin des 6 lignes présentés, il répétera l'opération





    presentvec(v2,tail2);
    cout<<endl;
    celltest(v2,v1, reg, tail2);
    presentvec(v1,tail2);

    presentvec(v2,tail2);
    cout<<endl;
    celltest(v2,v1, reg, tail2);
    presentvec(v1,tail2);

    presentvec(v2,tail2);
    cout<<endl;
    celltest(v2,v1, reg, tail2);
    presentvec(v1,tail2);

    cin>>v;}

     }



void remplirtab (int (&tabl)[8], int &taille){

	int i;
	cout << "Taille de la table1 (maximum 25) ";
	cin >> taille;
    i=0;
	while( (taille < 1) || (taille > 25) )
		{
		cout << "La talle doit être entre 1 et 25" << endl << "Recommencez" << endl;
		cin >> taille;
		}
	cout<<"entre des chiffres pour la tab1 ";
    for (i=0; i < taille; i++){

        cin >> tabl[i];
        cout << endl;}}


void remplirvec (vector<int>& vec, int &taille){

	int i;
	cout << "Taille de la table1 (maximum 25) ";
	cin >> taille;
    i=0;
	while( (taille < 1) || (taille > 25) )
		{
		cout << "La talle doit être entre 1 et 25" << endl << "Recommencez" << endl;
		cin >> taille;
		}
	cout<<"entre des chiffres pour la tab1 ";
    for (i=0; i < taille; i++){

        cin >> vec[i];
        cout << endl;}}






int presenttab (int tab[8], int taille) {
	int i;
	for (i=0; i < taille;i ++) {
	cout << tab[i]; }}



int presentvec (vector<int> vec, int tail) {
	int i;
	for (i=0; i < tail;i ++) {
	cout << vec[i]; }}








void celltest (vector<int> &vec,vector<int> &vec2,int tab[8],int tail) {   // il aurait été préférable de voir quelle règle appliquée avec 8 if, mais j'ai préféré séparé en deux. 

	int i;

for ( i=0; i < tail; i++) {
	if (vec[i]==0) {
		if (vec[(i-1+tail)%tail]==0 && vec[(i+1)%tail]==0){ vec2[i]=tab[0]; }
		else if (vec[(i-1+tail)%tail]==0 && vec[(i+1)%tail]==1){vec2[i]=tab[1];}
		else if (vec[(i-1+tail)%tail]==1 && vec[(i+1)%tail]==0){vec2[i]=tab[2];}
		else if (vec[(i-1+tail)%tail]==1 && vec[(i+1)%tail]==1){vec2[i]=tab[3];}
	}
	else {
		if (vec[(i-1+tail)%tail]==0 && vec[(i+1)%tail]==0){vec2[i]=tab[4];}
		else if (vec[(i-1+tail)%tail]==0 && vec[(i+1)%tail]==1) {vec2[i]=tab[5];}
		else if (vec[(i-1+tail)%tail]==1 && vec[(i+1)%tail]==0){vec2[i]=tab[6];}
		else if (vec[(i-1+tail)%tail]==1 && vec[(i+1)%tail]==1) {vec2[i]=tab[7];}
 	}

}
}

